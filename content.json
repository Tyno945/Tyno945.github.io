{"meta":{"title":"Felix blog","subtitle":"持续创作","description":"记录我的学习和生活","author":"Felix","url":"https://tyno945.github.io"},"pages":[{"title":"404 Not Found：该页无法显示","date":"2020-04-20T14:24:56.950Z","updated":"2020-04-20T14:24:56.950Z","comments":false,"path":"/404.html","permalink":"https://tyno945.github.io//404.html","excerpt":"","text":""},{"title":"关于","date":"2020-04-20T14:24:56.970Z","updated":"2020-04-20T14:24:56.970Z","comments":false,"path":"about/index.html","permalink":"https://tyno945.github.io/about/index.html","excerpt":"","text":"个人详细介绍"},{"title":"分类","date":"2020-04-20T14:24:56.972Z","updated":"2020-04-20T14:24:56.972Z","comments":false,"path":"categories/index.html","permalink":"https://tyno945.github.io/categories/index.html","excerpt":"","text":""},{"title":"书单","date":"2020-04-20T14:24:56.971Z","updated":"2020-04-20T14:24:56.971Z","comments":false,"path":"books/index.html","permalink":"https://tyno945.github.io/books/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2020-04-20T14:24:56.973Z","updated":"2020-04-20T14:24:56.973Z","comments":true,"path":"links/index.html","permalink":"https://tyno945.github.io/links/index.html","excerpt":"","text":""},{"title":"标签","date":"2020-04-20T14:24:56.975Z","updated":"2020-04-20T14:24:56.975Z","comments":false,"path":"tags/index.html","permalink":"https://tyno945.github.io/tags/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2020-04-20T14:24:56.974Z","updated":"2020-04-20T14:24:56.974Z","comments":false,"path":"repository/index.html","permalink":"https://tyno945.github.io/repository/index.html","excerpt":"","text":""}],"posts":[{"title":"掌握Markdown","slug":"掌握Markdown","date":"2018-10-29T06:02:38.000Z","updated":"2018-10-29T06:02:38.000Z","comments":true,"path":"2018/10/29/掌握Markdown/","link":"","permalink":"https://tyno945.github.io/2018/10/29/掌握Markdown/","excerpt":"","text":"上篇博文我提到了利用Markdown写博客文章，那什么是Markdown呢？本篇文章将详细地介绍Markdown。 markdown-cheatsheet-online.pdf 什么是Markdown？Markdown是一种轻量及易用的标记语法，它可以使普通文本内容具有一定的格式。 Markdown 的优点如下： 纯文本，所以兼容性极强，可以用所有文本编辑器打开。 让你专注于文字而不是排版。 格式转换方便，Markdown 的文本你可以轻松转换为 html、电子书等。 Markdown 的标记语法有极好的可读性。 Markdown语法标题123# This is an &lt;h1&gt; tag## This is an &lt;h2&gt; tag###### This is an &lt;h6&gt; tag 强调1234567*This text will be italic*_This will also be italic_**This text will be bold**__This will also be bold___You **can** combine them_ 列表1234567891011121314151617## Unordered* Item 1* Item 2 * Item 2a * Item 2b- Dashes work just as well- And if you have sub points, put two spaces before the dash or star: - Like this - And this## Ordered1. Item 11. Item 21. Item 3 1. Item 3a 1. Item 3b 图片12![GitHub Logo](/images/logo.png)Format: ![Alt Text](url) 链接12[GitHub](http://github.com)Format: [Alt Text](url) 引用1234As Kanye West said:&gt; We're living the future so&gt; the present is our past. 代码There are many different ways to style code with GitHub’s markdown. If you have inline code blocks, wrap them in backticks: var example = true. If you’ve got a longer block of code, you can indent with four spaces: if (isAwesome){ return true } GitHub also supports something called code fencing, which allows for multiple lines without indentation: 123if (isAwesome)&#123; return true&#125; And if you’d like to use syntax highlighting, include the language: 123if (isAwesome)&#123; return true&#125; 任务清单12- [x] This is a complete item- [ ] This is an incomplete item 表格12345| Tables | Are | Cool | | ------------- |:-------------:| -----:| | col 3 is | right-aligned | $1600 | | col 2 is | centered | $12 | | zebra stripes | are neat | $1 | Tables Are Cool col 3 is right-aligned $1600 col 2 is centered $12 zebra stripes are neat $1 表情符号1:sparkles: :camel: :boom: GitHub Flavored Markdown（GFM）GitHub.com使用自己的Markdown语法版本GFM，它提供了一组额外的有用特性，其中许多特性使得在GitHub.com上处理内容变得更加容易。","categories":[{"name":"原创博文","slug":"原创博文","permalink":"https://tyno945.github.io/categories/原创博文/"}],"tags":[{"name":"markdown","slug":"markdown","permalink":"https://tyno945.github.io/tags/markdown/"}]},{"title":"基于Hexo和Github建立自己的博客","slug":"基于Hexo和Github建立自己的博客","date":"2018-10-24T08:49:02.000Z","updated":"2018-10-27T08:49:02.000Z","comments":true,"path":"2018/10/24/基于Hexo和Github建立自己的博客/","link":"","permalink":"https://tyno945.github.io/2018/10/24/基于Hexo和Github建立自己的博客/","excerpt":"","text":"欢迎来到风和博客！这是我的第一篇博客，在本篇博客中，我首先向大家介绍下如何建立一个自己个人的博客。我的博客网站是基于Hexo和Github Page搭建的，使用VScode编辑器软件和Markdown语法写博客。 环境和工具准备 Windows10系统 VS code编辑器 Node.js Git Github 账号及ssh key配置 什么是 Hexo？Hexo 是一个快速、简洁且高效的基于 Node.js 的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 通过 Hexo 你可以轻松地使用 Markdown 编写文章，除了 Markdown 本身的语法之外，还可以使用 Hexo 提供的 标签插件 来快速的插入特定形式的内容。 安装使用Hexo12345$ npm install hexo-cli -g$ hexo init blog$ cd blog$ npm install$ hexo server npm 设置国内镜像 npm config set registry https://registry.npm.taobao.org 写博客更换主题首先换一个好看的主题，以cofess/hexo-theme-pure为例，在博客主目录下安装主题及相关插件。 123456$ git clone https://github.com/cofess/hexo-theme-pure.git themes/pure$ npm install hexo-wordcount --save$ npm install hexo-generator-json-content --save$ npm install hexo-generator-feed --save$ npm install hexo-generator-sitemap --save$ npm install hexo-generator-baidu-sitemap --save 主题安装完成后，将pure/_source下的文件都复制到博客根目录下的source下，否则相关的页面无法获取。主题配置参考pure github主题文档 打开站点配置文件_config.yml，找到theme字段，将其值更改为 pure，然后重启服务即可。 更换主题后如遇到问题，可以先删除原有静态文件缓存并重新生成。 $ hexo clean &amp;&amp; hexo generate 创建草稿并发布$ hexo new draft &lt;title&gt; $ hexo publish [layout] &lt;title&gt; $ hexo g 创建文章$ hexo new [post] &lt;title&gt; 高级技巧（1）模板设置 当我们使用命令 hexo new &lt;title&gt; 去创建我们的文章时，Hexo会根据/scaffolds/post.md模板文件对新建文件进行初始化，所以我们可以修改它来适应自己的写作习惯，一个简单的示例如下： 1234567---title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;updated: &#123;&#123; date &#125;&#125;tags:categories:--- （2）Front-matter设置 Front-matter 是文件最上方以 --- 分隔的区域，用于指定个别文件的变量，包括标题，日期，标签，分类等，示例如下： 1234title: Titledate: YYYY-MM-DD HH:MM:SStags: [tag1, tag2, ...]categories: category （3）首页显示 在Hexo框架博客的首页会显示文章的内容（默认显示文章的全部内容），如果当文章太长的时候就会显得十分冗余，所以我们有必要对其进行精简，只需在文章中使用 &lt;!--more--&gt; 标志，表示只会显示标志前面的内容。 （4）在博客中插入图片 方法一：如果你的Hexo项目中只有少量图片，那最简单的方法就是将它们放在 source/images 文件夹中。然后通过类似于 ![](/images/image.jpg) 的方法访问它们。 方法二：利用标签插件，Hexo也提供了更组织化的方式来管理资源。将 config.yml 文件中的 post_asset_folder 选项设为 true 来打开。 当资源文件管理功能打开后，Hexo将会在你每一次创建新文章时自动创建一个同名文件夹。将所有与你的文章有关的资源放在这个关联文件夹中之后，你可以通过相对路径来引用它们。 在文章中使用如下方式插入图片： {% asset_img example.jpg This is an example image %} 方法三: 在打开资源文件管理功能的前提下，安装插件npm install hexo-asset-image --save,在资源文件夹（就是那个与title同名的文件夹）中添加了图片example.PNG，则可以在对应的文章中使用语句 ![示例图片](title/example.PNG &quot;示例图片&quot;) 添加图片。 （5）支持评论 我使用的是Gitalk评论插件，它是一个基于 GitHub Issue 和 Preact 开发的评论插件。 首先，注册一个Github OAuth application，填写如下：1234Application name: # 应用名, 如Felix Blog,或写仓库名Homepage URL: # 博客的域名URL，如https://tyno945.github.ioApplication description: # 应用描述，选填Authorization callback URL: # 填写当前使用插件页面的域名,和博客URL相同 注册成功后，记录下你的clientID和clientSecret。 其次，安装gitalk并在主题配置文件里启用gitalk评论系统 12345678comment: type: gitalk # 启用哪种评论系统 gitalk: # gitalk. https://gitalk.github.io/ owner: # GitHub用户名，必须. GitHub repository 所有者，可以是个人或者组织。 admin: # GitHub用户名，必须. GitHub repository 的所有者和合作者 (对这个 repository 有写权限的用户)。 repo: # 填写仓库名称，不是地址。必须. GitHub repository. ClientID: #必须. GitHub Application Client ID. ClientSecret: #必须. GitHub Application Client Secret. 最后，发布到线上后登陆下进行授权即可。 部署发布到github page创建github page创建repository,必须命名为username.github.io，点击 Setting–&gt;GitHub Pages，你会看到那边有个网址，访问它，你将会惊奇的发现该项目已经被部署到网络上，能够通过外网来访问它。 hexo配置部署1.安装 hexo-deployer-git $ npm install hexo-deployer-git --save 2.修改 _config.yml配置 12345deploy: type: git repo: &lt;repository url&gt; #git@github.com:Tyno945/Tyno945.github.io.git branch: [branch] #master message: [message] #leave this blank 3.更新网站并发布 $ hexo clean &amp;&amp; hexo deploy -g 博客优化代码压缩生成静态文件时，自动压缩html,css,js $ npm install hexo-neat --save 在博客配置文件_config.yml中添加 12345678910111213141516# hexo-neatneat_enable: trueneat_html: enable: true exclude: neat_css: enable: true exclude: - '*.min.css'neat_js: enable: true mangle: true output: compress: exclude: - '*.min.js'","categories":[{"name":"原创博文","slug":"原创博文","permalink":"https://tyno945.github.io/categories/原创博文/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://tyno945.github.io/tags/hexo/"},{"name":"github","slug":"github","permalink":"https://tyno945.github.io/tags/github/"}]}]}